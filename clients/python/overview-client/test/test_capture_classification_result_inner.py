# coding: utf-8

"""
    Overview Smart AI Cameras API

    This the API specifications for the OV20i Smart AI Camera produced by Overview Inc. It works with firmware versions above 2024.23.1.  Some useful links: - [Overview Documentation](https://overview.ai/support)

    The version of the OpenAPI document: 0.0.1
    Contact: lucas.vandroux@viun.tech
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from overview_client.models.capture_classification_result_inner import CaptureClassificationResultInner

class TestCaptureClassificationResultInner(unittest.TestCase):
    """CaptureClassificationResultInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CaptureClassificationResultInner:
        """Test CaptureClassificationResultInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CaptureClassificationResultInner`
        """
        model = CaptureClassificationResultInner()
        if include_optional:
            return CaptureClassificationResultInner(
                created_at = '2025-01-14T20:30:13.38355+00:00',
                confidence = 0.8258894918836092,
                block_classification_classes = overview_client.models.capture_classification_result_inner_block_classification_classes.Capture_classification_result_inner_block_classification_classes(
                    label_name = 'Fail', 
                    block_roi_inspection_type_params = overview_client.models.capture_classification_result_inner_block_classification_classes_block_roi_inspection_type_params.Capture_classification_result_inner_block_classification_classes_block_roi_inspection_type_params(
                        name = 'Covers', ), ),
                roi_result = overview_client.models.capture_classification_result_inner_roi_result.Capture_classification_result_inner_roi_result(
                    block_roi_region_params = overview_client.models.capture_classification_result_inner_roi_result_block_roi_region_params.Capture_classification_result_inner_roi_result_block_roi_region_params(
                        name = 'Cover', 
                        bbox = [628.81, 251.83, 200, 200], 
                        angle = 0, ), )
            )
        else:
            return CaptureClassificationResultInner(
        )
        """

    def testCaptureClassificationResultInner(self):
        """Test CaptureClassificationResultInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
