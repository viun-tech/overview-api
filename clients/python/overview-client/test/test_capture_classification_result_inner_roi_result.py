# coding: utf-8

"""
    Overview Smart AI Cameras API

    This the API specifications for the OV20i Smart AI Camera produced by Overview Inc. It works with firmware versions above 2024.23.1.  Some useful links: - [Overview Documentation](https://overview.ai/support)

    The version of the OpenAPI document: 0.0.1
    Contact: lucas.vandroux@viun.tech
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from overview_client.models.capture_classification_result_inner_roi_result import CaptureClassificationResultInnerRoiResult

class TestCaptureClassificationResultInnerRoiResult(unittest.TestCase):
    """CaptureClassificationResultInnerRoiResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CaptureClassificationResultInnerRoiResult:
        """Test CaptureClassificationResultInnerRoiResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CaptureClassificationResultInnerRoiResult`
        """
        model = CaptureClassificationResultInnerRoiResult()
        if include_optional:
            return CaptureClassificationResultInnerRoiResult(
                block_roi_region_params = overview_client.models.capture_classification_result_inner_roi_result_block_roi_region_params.Capture_classification_result_inner_roi_result_block_roi_region_params(
                    name = 'Cover', 
                    bbox = [628.81, 251.83, 200, 200], 
                    angle = 0, )
            )
        else:
            return CaptureClassificationResultInnerRoiResult(
        )
        """

    def testCaptureClassificationResultInnerRoiResult(self):
        """Test CaptureClassificationResultInnerRoiResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
