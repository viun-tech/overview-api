openapi: 3.1.1
servers:
  - url: http://192.168.1.101
    description: Local development device
info:
  title: Overview Smart AI Cameras API
  version: '0.0.1'
  description: |-
    This the API specifications for the OV20i Smart AI Camera produced by Overview Inc. It works with firmware versions above 2024.23.1.

    Some useful links:
    - [Overview Documentation](https://overview.ai/support)
  contact:
    email: lucas.vandroux@viun.tech
  license:
    name: MIT License
    url: 'https://github.com/viun-tech/overview-api/blob/main/LICENSE'

tags:
  - name: recipe
    description: Operations about recipe
  - name: capture
    description: Operations about capture
paths:
  /edge/recipe/activate:
    post:
      tags:
        - recipe
      summary: Activate a recipe
      description: Activate a specific recipe for execution. Only one recipe switch can happen at a time, and only one recipe can be activated at a time.
      operationId: activateRecipeById
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeId'
      responses:
        '200':
          description: Recipe successfully activated
          content:
            application/json:
              schema:
                type: object
                properties:
                  details:
                    type: string
                    example: ""
                  success:
                    type: boolean
                    example: true

        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  details:
                    type: string
                    description: Additional details about the results of the action performed.
                    example: ""
                  success:
                    type: boolean
                    description: Whether the action peformed was successful.
                    example: false
                  'result':
                    type: object
                    example: {}
        '408':
          description: Recipe switch request timed out
          content:
            application/json:
              schema:
                type: object
                properties:
                  details:
                    type: string
                    example: 'Recipe switch request timed out. Try again.'
                  success:
                    type: boolean
                    example: false
        '429':
          description: A recipe switch is currently in progress
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'A recipe switch is currently in progress.'
        '500':
          description: Recipe switch failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  details:
                    type: string
                    example: 'Recipe switch request failed.'
                  success:
                    type: boolean
                    example: false
  /postgrest/captures:
    get:
      tags:
        - capture
      summary: Get 1 or more captures according to specific parameters
      description: Get captures according to specific parameters. Keep the default parameters to get the last capture. Only support classification recipe.
      operationId: getCaptures
      parameters:
        - name: limit
          in: query
          description: Maximum number of captures to return
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: order
          in: query
          description: Order of returned captures
          required: false
          schema:
            type: string
            enum: ['captured_at.asc', 'captured_at.desc']
            default: 'captured_at.desc'
        - name: select
          in: query
          description: Fields to include in the response
          required: false
          schema:
            type: string
            default: 'id,captured_at,source_recipe_id,path,height,width,size,classification_result(created_at,confidence,block_classification_classes(label_name,block_roi_inspection_type_params(name)),roi_result(block_roi_region_params(name,bbox,angle)))'
      responses:
        '200':
          description: Successfully retrieved captures. Only support classification recipe.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Capture'

components:
  schemas:   
    RecipeId:
      type: object
      properties:
        id:
          type: integer
          format: int16
          minimum: 1
          maximum: 65535
          description: PLC ID of the recipe.
          example: 42
    Capture:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the capture
          example: 9207
        captured_at:
          type: string
          format: date-time
          description: Timestamp when the capture was taken
          example: "2024-10-28T10:44:43.048129+00:00"
        source_recipe_id:
          type: integer
          description: ID of the recipe used for this capture
          example: 42
        path:
          type: string
          description: File path of the captured image
          example: "library_captures/1730112283020.jpg"
        height:
          type: integer
          description: Height of the captured image in pixels
          example: 1080
        width:
          type: integer
          description: Width of the captured image in pixels
          example: 1408
        size:
          type: integer
          description: Size of the captured image file in bytes
          example: 733320
        classification_result:
          type: array
          description: List of classification results for each ROI
          items:
            type: object
            properties:
              created_at:
                type: string
                format: date-time
                description: Timestamp when the classification was performed
                example: "2025-01-14T20:30:13.38355+00:00"
              confidence:
                type: number
                format: float
                description: Confidence score of the classification result
                example: 0.8258894918836092
              block_classification_classes:
                type: object
                properties:
                  label_name:
                    type: string
                    description: Classification label assigned to the ROI
                    example: "Fail"
                  block_roi_inspection_type_params:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Name of the inspection type
                        example: "Covers"
              roi_result:
                type: object
                properties:
                  block_roi_region_params:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Name of the ROI region
                        example: "Cover"
                      bbox:
                        type: array
                        description: Bounding box coordinates [x, y, width, height]
                        items:
                          type: number
                        example: [628.81, 251.83, 200, 200]
                      angle:
                        type: number
                        description: Rotation angle of the ROI in degrees
                        example: 0
